{"version":3,"sources":["components/navigation/navigation.js","components/countryCard/countryCard.js","components/search/search.js","components/filterByRegion/filterByRegion.js","components/loading/loading.js","components/countriesList/countriesList.js","components/detailView/detailView.js","redux/reducer.js","components/App/App.js","index.js"],"names":["Navigation","history","useHistory","className","onClick","push","document","querySelector","classList","toggle","CountryCard","props","country","cca3","seeDetails","loading","src","flags","svg","alt","name","common","value","population","displayType","thousandSeparator","renderText","region","capital","Search","dispatch","useDispatch","filterName","useSelector","state","useState","inputValue","setInputValue","type","placeholder","onChange","e","target","payload","filterRegion","currentSelectValue","setCurrentSelectValue","useEffect","options","select","window","addEventListener","remove","closeSelectEventListener","Fragment","map","option","index","key","filterCountriesByRegion","Loading","CountriesList","countryList","countryListByName","countryListByRegion","isLoaded","setIsloaded","a","fetch","then","response","json","data","status","console","log","catch","error","getCountries","length","DetailView","code","useParams","countryURL","setCountry","setLoaded","toLowerCase","getCountry","goBack","subregion","tld","Object","keys","currencies","values","languages","borders","item","store","createStore","action","filter","includes","App","StrictMode","exact","path","component","from","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1f63fb9d.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport './style.css';\r\n\r\nfunction Navigation() {\r\n\r\n    const history = useHistory();\r\n\r\n    function toggleTheme() {\r\n        const body = document.querySelector(\":root\")\r\n        body.classList.toggle(\"dark-mode\")\r\n    }\r\n\r\n    return (\r\n        <header className=\"navigation\">\r\n            <div className=\"navigation-content\">\r\n                <div className=\"logo\">\r\n                    <button onClick={() => { history.push(\"/React-Countries\") }}>\r\n                        <h1>Where in the world?</h1>\r\n                    </button>\r\n                </div>\r\n                <div className=\"theme-toggle\">\r\n                    <button onClick={() => { toggleTheme() }}>\r\n                        <i className=\"far fa-moon\"></i>\r\n                        Dark Mode\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\nexport default Navigation;","import React from 'react';\r\nimport './style.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport NumberFormat from 'react-number-format'\r\n\r\n\r\n\r\n\r\nexport default function CountryCard(props) {\r\n\r\n    const country = props.country\r\n    let history = useHistory();\r\n\r\n    function seeDetails(country) {\r\n        history.push(`/React-Countries/${country.cca3}`);\r\n    }\r\n\r\n    return (\r\n        <div className=\"countries-card\" onClick={() => { seeDetails(country) }}>\r\n            <img loading=\"lazy\" src={country.flags.svg} alt={country.name.common}/>\r\n            <div className=\"card-description\">\r\n                <h2>{country.name.common}</h2>\r\n                <ul className=\"card-info\">\r\n                    <li>\r\n                        <b>Population: </b>\r\n                        <NumberFormat value={country.population} displayType={'text'} thousandSeparator={true} renderText={value => <span> {value}</span>} />\r\n                    </li>\r\n                    <li>\r\n                        <b>Region: </b>\r\n                        {country.region}\r\n                    </li>\r\n                    <li>\r\n                        <b>Capital: </b>\r\n                        {country.capital}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n} ","import React, {useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './style.css';\r\n\r\nexport default function Search() {\r\n\r\n    const dispatch = useDispatch();\r\n    const filterName = useSelector((state) => state.filterName)\r\n    const [inputValue, setInputValue] = useState(filterName || \"\");\r\n\r\n\r\n    function filterCountriesByName(name) {\r\n        setInputValue(name)\r\n        dispatch({\r\n            type: \"FILTER_COUNTRY_BY_NAME\",\r\n            payload: name\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-input\">\r\n            <i className=\"fas fa-search\"></i>\r\n            <input type=\"text\" placeholder=\"Search for a country...\" value={inputValue} onChange={(e) => { filterCountriesByName(e.target.value) }} />\r\n        </div>\r\n    )\r\n} ","import React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport './style.css';\r\n\r\nexport default function Search() {\r\n\r\n    const dispatch = useDispatch();   \r\n    const filterName = useSelector((state) => state.filterName)\r\n    const filterRegion = useSelector((state) => state.filterRegion)\r\n    const options = [\r\n        {\r\n            name: \"Unfiltered\",\r\n            value: \"\"\r\n        },\r\n        {\r\n            name: \"Africa\",\r\n            value: \"Africa\"\r\n        },\r\n        {\r\n            name: \"America\",\r\n            value: \"Americas\"\r\n        },\r\n        {\r\n            name: \"Asia\",\r\n            value: \"Asia\"\r\n        },\r\n        {\r\n            name: \"Europe\",\r\n            value: \"Europe\"\r\n        },\r\n        {\r\n            name: \"Oceania\",\r\n            value: \"Oceania\"\r\n        },\r\n    ]\r\n    const [currentSelectValue, setCurrentSelectValue] = useState(filterRegion || \"Filter by region\");\r\n\r\n    useEffect(()=>{\r\n        closeSelectEventListener()\r\n    },[])\r\n\r\n    function filterCountriesByRegion({name, value}){\r\n        setCurrentSelectValue(name)        \r\n        dispatch({\r\n            type: \"FILTER_COUNTRY_BY_REGION\",\r\n            payload: value\r\n        })\r\n\r\n        dispatch({\r\n            type: \"FILTER_COUNTRY_BY_NAME\",\r\n            payload: filterName\r\n        })\r\n    }\r\n    function closeSelectEventListener(){\r\n        let options = document.querySelector(\".custom-options\")\r\n        let select = document.querySelector(\".custom-select\")\r\n        window.addEventListener(\"click\", (e)=>{\r\n            if(e.target !== select){\r\n                options.classList.remove(\"show-select-options\")\r\n            } else {\r\n                options.classList.toggle(\"show-select-options\")\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n        <div className=\"custom-select-wrapper\">\r\n            <div className=\"custom-select\">\r\n                <div className=\"custom-select-trigger\">\r\n                    <span>{currentSelectValue}</span>\r\n                    <i className=\"fas fa-chevron-down\"></i>\r\n                </div>\r\n            </div>\r\n            <div className=\"custom-options\">\r\n                {\r\n                    options.map((option, index)=>(\r\n                        <span key={index} onClick={()=>{filterCountriesByRegion(option)}}>{option.name}</span>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n} ","import React from 'react';\r\nimport './style.css';\r\n\r\nexport default function Loading() {\r\n\r\n    return (\r\n        <div className=\"loading-background\">\r\n            <div className=\"lds-ripple\"><div></div><div></div></div>\r\n        </div>\r\n    )\r\n} ","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n// Components\r\nimport CountryCard from '../countryCard/countryCard';\r\nimport Search from '../search/search'\r\nimport FilterByRegion from '../filterByRegion/filterByRegion'\r\nimport Loading from '../loading/loading'\r\n// Styles\r\nimport './style.css';\r\n\r\nexport default function CountriesList() {\r\n\r\n    const dispatch = useDispatch();\r\n    const filterName = useSelector((state) => state.filterName)\r\n    const filterRegion = useSelector((state) => state.filterRegion)\r\n    const countryList = useSelector((state) => \r\n    {\r\n        if(filterName !== \"\"){\r\n            return state.countryListByName\r\n        }\r\n\r\n        if(filterRegion !== \"\"){\r\n            return state.countryListByRegion\r\n        }\r\n\r\n        return state.countryList\r\n    })\r\n    const [isLoaded, setIsloaded] = useState(false);\r\n\r\n    const countriesUrl = \"https://restcountries.com/v3.1/all\";\r\n\r\n    useEffect(() => {\r\n        \r\n    const getCountries = async ()=> {\r\n        let countriesURL = countriesUrl\r\n        await fetch(countriesURL)\r\n            .then(response => response.json())\r\n            .then((data) => {\r\n                if (data.status !== 404 && data.status !== 400) {\r\n                    setIsloaded(true);\r\n                    console.log(data)\r\n                    dispatch({\r\n                        type: \"SET_COUNTRY_LIST\", \r\n                        payload: data\r\n                    })\r\n                }\r\n            })\r\n            .catch(error => { console.log(error) });\r\n    }\r\n        getCountries();\r\n    }, [dispatch]);\r\n\r\n\r\n    if(isLoaded){\r\n        return (\r\n            <section className=\"countries-list\">\r\n                <div className=\"container\">\r\n                    <div className=\"search\">\r\n                            <Search />\r\n                            <FilterByRegion />\r\n                    </div>\r\n    \r\n                    {countryList && <div className=\"cards-grid\">{                  \r\n    \r\n                        countryList.map((country, index) =>\r\n                        <CountryCard country={country} key={index} />)        \r\n    \r\n                    }</div>}\r\n                </div>\r\n                {countryList.length === 0 && <h2 className=\"not-found\">Country not found</h2>}\r\n            </section>\r\n        )\r\n    } else {\r\n        return (\r\n            <Loading />\r\n        )\r\n    }\r\n\r\n   \r\n} ","import React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n// Components\r\nimport NumberFormat from 'react-number-format'\r\nimport Loading from '../loading/loading'\r\n// Styles\r\nimport './style.css'\r\n\r\n\r\nexport default function DetailView() {\r\n\r\n    let { code } = useParams();\r\n    const countryURL = \"https://restcountries.com/v3.1/alpha/\";\r\n    const history = useHistory();\r\n\r\n    const [country, setCountry] = useState({});\r\n    const [isLoaded, setLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const getCountry = async()=>{\r\n            \r\n            await fetch(`${countryURL}${code.toLowerCase()}`)\r\n            .then(response => response.json())\r\n            .then((data) => {\r\n                console.log(data)\r\n                if (data.status !== 404) {\r\n                    setCountry(data[0]);\r\n                    setLoaded(true);\r\n                } else {\r\n                }\r\n            })\r\n        }\r\n        getCountry()\r\n    }, [code, countryURL]);\r\n\r\n    const getArrayWithCommas = (array) =>{   \r\n        return Object.keys(array)\r\n    }\r\n\r\n    if (isLoaded) {\r\n        return (\r\n            <section className=\"detail-view\">\r\n                <div className=\"container\">\r\n                    <div className=\"back-btn\">\r\n                        <button onClick={()=>{history.goBack()}}><i className=\"fas fa-long-arrow-alt-left\"></i>Back</button>\r\n                    </div>\r\n                    <div className=\"detail-wrapper\">\r\n                        <div className=\"country-img\">\r\n                            <img src={country.flags.svg} alt={country.flags.alt}/>\r\n                        </div>\r\n                        <div className=\"country-info\">\r\n                            <div className=\"info-wrapper\">\r\n                                <div className=\"title\">\r\n                                    <h2>{country.name.common}</h2>\r\n                                </div>\r\n                                <div className=\"info\">\r\n                                    <div className=\"left-info\">\r\n                                        <ul>\r\n                                            <li><b>Native name:</b> {country.name.common}</li>\r\n                                            <li><b>Population: </b>\r\n                                                <NumberFormat value={country.population} displayType={'text'} thousandSeparator={true} renderText={value => <span> {value}</span>} />\r\n                                            </li>\r\n                                            <li><b>Region:</b> {country.region}</li>\r\n                                            <li><b>Subregion:</b> {country.subregion}</li>\r\n                                            <li><b>Capital:</b> {country.capital}</li>\r\n                                        </ul>\r\n                                    </div>\r\n                                    <div className=\"right-info\">\r\n                                        <ul>\r\n                                            <li><b>Top level domains:</b> {country.tld}</li>\r\n                                            <li><b>Currencies: </b>\r\n                                                {Object.keys(country.currencies)}\r\n                                            </li>\r\n                                            <li><b>Languages: </b>\r\n                                                {Object.values(country.languages)}\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"bottom-info\">\r\n                                    <b>Border countries: </b>\r\n                                    {country.borders?.map((item, index) => (\r\n                                        <label className=\"chip\" key={index}>{item}</label>\r\n                                    ))}                                            \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    } else {\r\n        return (\r\n            <Loading />\r\n        )\r\n    }\r\n\r\n}","import { createStore } from 'redux'\r\n\r\n\r\nconst initialState = {\r\n    countryList: [],\r\n    countryListByName: [],\r\n    countryListByRegion: [],\r\n    filterRegion: \"\",\r\n    filterName: \"\"\r\n  }\r\n  \r\n  function reducer(state, action) {\r\n    switch (action.type) {\r\n      \r\n      case \"SET_COUNTRY_LIST\": {\r\n        return { ...state, countryList: action.payload }\r\n      }\r\n\r\n      case \"FILTER_COUNTRY_BY_NAME\": {\r\n        let countryListByName\r\n        if (state.filterRegion !== \"\") {\r\n          countryListByName = state.countryListByRegion.filter((country) => {\r\n            return country.name.common.toLowerCase().includes(action.payload.toLowerCase())\r\n            }\r\n          )\r\n        } else {\r\n          countryListByName = state.countryList.filter((country) => {\r\n            return country.name.common.toLowerCase().includes(action.payload.toLowerCase())\r\n            }\r\n          )\r\n        }        \r\n        return { ...state, countryListByName, filterName: action.payload}\r\n      }\r\n\r\n      case \"FILTER_COUNTRY_BY_REGION\": {  \r\n          let countryListByRegion = state.countryList.filter((country) => {\r\n            return country.region === action.payload\r\n            }\r\n          )  \r\n        return { ...state, countryListByRegion, filterRegion: action.payload }\r\n      }\r\n\r\n      default: {\r\n        return state\r\n      }\r\n    }\r\n  }\r\n  \r\nconst store = createStore(reducer, initialState)\r\nexport default store;","import React from 'react'\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\r\nimport Navigation from '../navigation/navigation';\r\nimport CountriesList from '../countriesList/countriesList';\r\nimport DetailView from '../detailView/detailView'\r\nimport { Provider } from 'react-redux'\r\nimport store from '../../redux/reducer'\r\n\r\nfunction App() {\r\n    return (\r\n        <React.StrictMode>\r\n            <Provider store={store}>\r\n                <BrowserRouter>\r\n                    <Navigation />\r\n                    <Switch>\r\n                        <Route exact path=\"/React-Countries\" component={CountriesList} />\r\n                        <Route path=\"/React-Countries/:code\" component={DetailView} />\r\n                        <Redirect from=\"/\" to=\"/React-Countries\" />\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </Provider>\r\n        </React.StrictMode>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}